name: Deploy to Test Environment

on:
  push:
    branches:
      - test

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DOT_ENV_TEST }}" ]; then echo "DOT_ENV_TEST is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_KEY }}" ]; then echo "SSH_KEY is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_IP }}" ]; then echo "SSH_IP is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_USER }}" ]; then echo "SSH_USER is not set!" >&2; exit 1; fi
 

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:test
            ghcr.io/${{ github.repository }}:test-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=test

  deploy:
    name: Deploy to Test Environment
    needs: build
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Deploy to Test Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo ">>> Navigating to test project directory"
            cd ~/qoo-quote-be || exit 1

            echo ">>> Fetching latest changes"
            git fetch origin test

            echo ">>> Resetting to origin/test"
            git reset --hard origin/test

            echo ">>> Starting deployment"
            docker-compose -f compose.test.yml pull
            docker-compose -f compose.test.yml --env-file .env.test up -d --force-recreate api

      - name: Notify on Success
        if: success()
        run: |
          echo "Deployment to test environment completed successfully!"

      - name: Notify on Failure
        if: failure()
        run: |
          echo "Deployment to test environment failed!"
