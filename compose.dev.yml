services:
  api:
    image: qoo-quote-api:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qoo-quote-api
    env_file:
      - .env.development
    ports:
      - '3005:3000'
    networks:
      - qoo-quote-network
    command: ['pnpm', 'run', 'start:dev']
    volumes:
      - .:/app
    restart: always
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:13-alpine
    container_name: qoo-quote-database
    env_file:
      - .env.development
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5433:5432'
    volumes:
      - qoo-quote-database:/var/lib/postgresql/data
    networks:
      - qoo-quote-network
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  qoo-quote-database:
    name: qoo-quote-database

networks:
  qoo-quote-network:
    name: qoo-quote-network
