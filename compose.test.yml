services:
  api:
    image: qoo-quote-api:test
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: qoo-quote-api
    expose:
      - 3005
    env_file:
      - .env.test
    networks:
      - qq-test-internal
      - traefik-public
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        while ! nc -z database 5432; do sleep 1; done &&
        echo 'Database is ready!' &&
        pnpm start:dev
      "
    restart: always
    depends_on:
      database:
        condition: service_healthy
    labels:
      traefik.enable: 'true'
      traefik.http.routers.qoo-quote.rule: 'Host(`qq-api-test-v0.homelab-kaleici.space`)'
      traefik.http.routers.qoo-quote.entrypoints: 'websecure'
      traefik.http.services.qoo-quote.loadbalancer.server.port: '3005'
      traefik.http.routers.qoo-quote.tls: 'true'
      traefik.http.routers.qoo-quote.tls.certresolver: 'cloudflare'
      traefik.http.middlewares.qoo-quote-headers.headers.sslredirect: 'true'

  database:
    image: postgres:13-alpine
    container_name: qoo-quote-database
    env_file:
      - .env.test
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5433:5432'
    volumes:
      - qoo-quote-database:/var/lib/postgresql/data
    networks:
      - qq-test-internal
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  qoo-quote-database:
    name: qoo-quote-database

networks:
  traefik-public:
    external: true
  qq-test-internal:
    name: qq-test-internal
    driver: bridge
